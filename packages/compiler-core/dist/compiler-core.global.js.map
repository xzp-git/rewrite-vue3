{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\r\n\r\nfunction createParserContext(template) {\r\n    \r\n    return {\r\n        line:1,\r\n        column:1,\r\n        offset:0,\r\n        source:template, //\u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u8FDB\u884C\u89E3\u6790 slice\r\n        originalSource:template\r\n    }\r\n}\r\n\r\nfunction isEnd(context) {\r\n    const source = context.source\r\n\r\n    return !source\r\n}\r\n\r\nfunction getCursor(context) {\r\n    let {line, column, offset} = context\r\n\r\n    return {line, column, offset}\r\n}\r\n\r\nfunction advancePositionMutation(context, source, endIndex) {\r\n    let linesCount = 0\r\n\r\n    let linePos = -1\r\n    for(let i = 0; i < endIndex; i++){\r\n        if (source.charCodeAt(i) == 10) {\r\n            linesCount++\r\n            linePos = i //\u7B2C\u51E0\u4E2A\u5B57\u7B26\u6362\u884C\u4E86\r\n        }\r\n    }\r\n\r\n    context.line += linesCount\r\n    context.offset += endIndex\r\n    context.column = linePos == -1? context.column + endIndex : endIndex - linePos\r\n\r\n}\r\n\r\n\r\nfunction advanceBy(context, endIndex) {\r\n    //\u6BCF\u6B21\u5220\u6389\u5185\u5BB9\u7684\u65F6\u5019 \u90FD\u8981\u66F4\u65B0\u6700\u65B0\u7684\u884C\u5217\u548C\u504F\u79FB\u91CF\u4FE1\u606F\r\n    let source = context.source\r\n    advancePositionMutation(context, source, endIndex)\r\n    context.source = source.slice\r\n}\r\n\r\n\r\nfunction parseTextData(context, endIndex) {\r\n    const rawText = context.source.slice(0, endIndex)\r\n\r\n    advanceBy(context, endIndex)\r\n    \r\n    return rawText\r\n}\r\n\r\nfunction getSelection(context, start, end?) {\r\n    end = end || getCursor(context)\r\n\r\n    return {\r\n        start,\r\n        end,\r\n        source:context.originalSource.slice(start.offset, end.offset)\r\n    }\r\n}\r\n\r\n\r\nfunction parseText(context) {\r\n    //\u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019\uFF0C\u8981\u770B \u540E\u9762\u5230\u54EA\u91CC\u7ED3\u675F\r\n    let endTokens = ['<', '{{']\r\n\r\n    let endIndex = context.source.length //\u9ED8\u8BA4\u8BA4\u4E3A\u5230\u6700\u540E\u7ED3\u675F\r\n\r\n    for(let i = 0; i < endTokens.length; i++){\r\n        let index = context.source.indexOf(endTokens[i], 1)\r\n        //\u627E\u5230\u4E86 \u5E76\u4E14\u7B2C\u4E00\u6B21\u6BD4\u6574\u4E2A\u5B57\u7B26\u4E32\u5C0F\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index\r\n        }\r\n    }\r\n\r\n    //\u521B\u5EFA \u884C\u5217\u4FE1\u606F\r\n    const start = getCursor(context) //\u5F00\u59CB\r\n\r\n    //\u53D6\u5185\u5BB9\r\n    const content = parseTextData(context, endIndex)\r\n    \r\n    return {\r\n        type:NodeTypes.TEXT,\r\n        content:content,\r\n        loc:getSelection(context, start)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction parse(template) {\r\n    //\u521B\u5EFA\u4E00\u4E2A\u89E3\u6790\u7684\u4E0A\u4E0B\u6587 \u6765\u8FDB\u884C\u5904\u7406\r\n    const context = createParserContext(template)\r\n\r\n    const nodes = []\r\n\r\n    while (!isEnd(context)) {\r\n        const source = context.source\r\n        let node\r\n        if (source.startsWith('{{')) {\r\n            node = 'xxx'\r\n        }else if (source[0] === '<') {\r\n            node = '111'\r\n        }\r\n        //\u6587\u672C\r\n        if (!node) {\r\n            node = parseText(context)\r\n        }\r\n        nodes.push(node)\r\n        console.log(nodes)\r\n        break\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function compile(template) {\r\n    \r\n    //\u5C06\u6A21\u677F\u8F6C\u6210\u62BD\u8C61\u8BED\u6CD5\u6811\r\n    const ast = parse(template)//\u8FD9\u91CC\u9700\u8981\u5C06html\u8BED\u6CD5\u8F6C\u6362\u6210js\u8BED\u6CD5\uFF0C\u7F16\u8BD1\u539F\u7406\r\n    \r\n    return ast\r\n\r\n    //\u5BF9ast\u8BED\u6CD5\u6811 \u8FDB\u884C\u4E00\u4E9B\u9884\u5148\u5904\u7406\r\n    // transform(ast) \u4F1A\u751F\u6210\u4E00\u4E9B\u4FE1\u606F\r\n\r\n\r\n    //\u4EE3\u7801\u751F\u6210\r\n\r\n\r\n    // return generate(ast) \u6700\u7EC8\u751F\u6210\u4EE3\u7801 \u548Cvue\u7684\u8FC7\u7A0B\u4E00\u6837 \r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,+BAA6B,UAAU;AAEnC,WAAO;AAAA,MACH,MAAK;AAAA,MACL,QAAO;AAAA,MACP,QAAO;AAAA,MACP,QAAO;AAAA,MACP,gBAAe;AAAA,IACnB;AAAA,EACJ;AAEA,iBAAe,SAAS;AACpB,UAAM,SAAS,QAAQ;AAEvB,WAAO,CAAC;AAAA,EACZ;AAEA,qBAAmB,SAAS;AACxB,QAAI,EAAC,MAAM,QAAQ,WAAU;AAE7B,WAAO,EAAC,MAAM,QAAQ,OAAM;AAAA,EAChC;AAEA,mCAAiC,SAAS,QAAQ,UAAU;AACxD,QAAI,aAAa;AAEjB,QAAI,UAAU;AACd,aAAQ,IAAI,GAAG,IAAI,UAAU,KAAI;AAC7B,UAAI,OAAO,WAAW,CAAC,KAAK,IAAI;AAC5B;AACA,kBAAU;AAAA,MACd;AAAA,IACJ;AAEA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,SAAS,WAAW,KAAI,QAAQ,SAAS,WAAW,WAAW;AAAA,EAE3E;AAGA,qBAAmB,SAAS,UAAU;AAElC,QAAI,SAAS,QAAQ;AACrB,4BAAwB,SAAS,QAAQ,QAAQ;AACjD,YAAQ,SAAS,OAAO;AAAA,EAC5B;AAGA,yBAAuB,SAAS,UAAU;AACtC,UAAM,UAAU,QAAQ,OAAO,MAAM,GAAG,QAAQ;AAEhD,cAAU,SAAS,QAAQ;AAE3B,WAAO;AAAA,EACX;AAEA,wBAAsB,SAAS,OAAO,KAAM;AACxC,UAAM,OAAO,UAAU,OAAO;AAE9B,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA,QAAO,QAAQ,eAAe,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,IAChE;AAAA,EACJ;AAGA,qBAAmB,SAAS;AAExB,QAAI,YAAY,CAAC,KAAK,IAAI;AAE1B,QAAI,WAAW,QAAQ,OAAO;AAE9B,aAAQ,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAI;AACrC,UAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU,IAAI,CAAC;AAElD,UAAI,UAAU,MAAM,WAAW,OAAO;AAClC,mBAAW;AAAA,MACf;AAAA,IACJ;AAGA,UAAM,QAAQ,UAAU,OAAO;AAG/B,UAAM,UAAU,cAAc,SAAS,QAAQ;AAE/C,WAAO;AAAA,MACH,MAAK;AAAA,MACL;AAAA,MACA,KAAI,aAAa,SAAS,KAAK;AAAA,IACnC;AAAA,EAEJ;AAQA,iBAAe,UAAU;AAErB,UAAM,UAAU,oBAAoB,QAAQ;AAE5C,UAAM,QAAQ,CAAC;AAEf,WAAO,CAAC,MAAM,OAAO,GAAG;AACpB,YAAM,SAAS,QAAQ;AACvB,UAAI;AACJ,UAAI,OAAO,WAAW,IAAI,GAAG;AACzB,eAAO;AAAA,MACX,WAAU,OAAO,OAAO,KAAK;AACzB,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,MAAM;AACP,eAAO,UAAU,OAAO;AAAA,MAC5B;AACA,YAAM,KAAK,IAAI;AACf,cAAQ,IAAI,KAAK;AACjB;AAAA,IACJ;AAAA,EACJ;AAKO,mBAAiB,UAAU;AAG9B,UAAM,MAAM,MAAM,QAAQ;AAE1B,WAAO;AAAA,EAUX;",
  "names": []
}
